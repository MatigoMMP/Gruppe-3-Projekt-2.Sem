@page "/listjobs"
@using festivalsql.Shared.Models;
@inject HttpClient Http

<div class="listjobs_container">
    <div class="listjobs_list">
        <h1>Liste over opgaver</h1>

        @if (jobs == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Detail</th>
                        <th>Place</th>
                        <th>Status</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var job in jobs)
                    {
                        <tr>
                            <td>@job.opgavedetalje_id</td>
                            <td>@job.placering_id</td>
                            <td>@job.status_id</td>
                            <td>
                                <button class="btn btn-sm btn-primary" @onclick="@(() => GetJob(@job.opgave_id))">Edit</button>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-primary" @onclick="@(() => DeleteJob(@job.opgave_id))">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="listjobs_submit">
        <h4>Opret opgave</h4>

        <form>
            <div class="form-group">
                <label>Detail</label>
                <input class="form-control col-sm-3" @bind="newJob.opgavedetalje_id" />
            </div>
            <div class="form-group">
                <label>Place</label>
                <input class="form-control col-sm-3" @bind="newJob.placering_id" />
            </div>
            <div class="form-group">
                <label>Status</label>
                <input class="form-control col-sm-3" @bind="newJob.status_id" />
            </div>
            <button class="btn btn-primary" @onclick="SubmitJob">Submit</button>
        </form>
    </div>
</div>

    @code {
        private List<Job> jobs;

        private Job newJob = new Job();

        private bool edit = false;

        protected override async Task OnInitializedAsync()
        {
            jobs = await Http.GetFromJsonAsync<List<Job>>("api/job");
        }

        private async Task GetJob(int id)
        {
            newJob = await Http.GetFromJsonAsync<Job>("api/job/detail/" + id);
            edit = true;
        }

        private async Task SubmitJob()
        {
            if (edit == false)
            {
                await Http.PostAsJsonAsync<Job>("api/job/create", newJob);
                await OnInitializedAsync();
            }
            else
            {
                await Http.PutAsJsonAsync<Job>("api/job/edit", newJob);
                edit = false;
                await OnInitializedAsync();
            }
        }

        private async Task DeleteJob(int id)
        {
            await Http.DeleteAsync("api/job/delete" + id);
            await OnInitializedAsync();
        }
    }
